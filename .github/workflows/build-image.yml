on:
  workflow_call:
    inputs:
      image:
        required: true
        type: string
      context:
        required: true
        type: string
      dockerfile:
        required: false
        type: string
        default: 'Dockerfile'
      multiarch:
        required: false
        type: boolean
        default: true
      build-changes-only:
        required: true
        type: boolean
        default: false

jobs:
  build-image:
    name: Build ${{ inputs.image }} image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 1

      - name: Get previous release tag
        id: prev-tag
        if: inputs.build-changes-only == true
        run: |
          PREV_TAG=$(git describe --abbrev=0 --tags $(git rev-list --tags --skip=1 --max-count=1))
          echo "previous_tag=$PREV_TAG" >> $GITHUB_ENV

      - name: Check for changes in build directory
        id: check-changes
        if: inputs.build-changes-only == true
        run: |
          echo $PREV_TAG
          echo "${{ env.previous_tag }}"
          git fetch --tags
          CHANGED_FILES=$(git diff --name-only $PREV_TAG HEAD)
          echo "$CHANGED_FILES" > changed_files.txt
          cat changed_files.txt
          if grep -q '${{ inputs.context }}/' changed_files.txt; then
            echo "has_changes=true" >> $GITHUB_ENV
          else
            echo "has_changes=false" >> $GITHUB_ENV
          fi

      - name: Use the Output
        run: |
          echo "has_changes = ${{ env.has_changes }}"
          if [[ "${{ env.has_changes }}" == "true" ]]; then
            echo "The command was successful."
          else
            echo "The command failed."
          fi

      - name: Log in to Docker Hub
        if: inputs.build-changes-only == false || env.has_changes == 'true'
        uses: docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567 # v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        if: inputs.build-changes-only == false || env.has_changes == 'true'
        uses: docker/metadata-action@369eb591f429131d6889c46b94e711f089e6ca96 # v5.6.1
        with:
          images: ghcr.io/markmetcalfe/docker-dev-${{ inputs.image }}
          # Adds tags for 'x.x.x' release version and 'multiarch' if multiarch
          tags: |
            type=semver,pattern={{version}}
            ${{ inputs.multiarch == true && 'type=raw,multiarch' || '' }}

      - name: Set up QEMU (to support building for both amd64 and arm64)
        if: inputs.build-changes-only == false || env.has_changes == 'true' && inputs.multiarch == true
        uses: docker/setup-qemu-action@49b3bc8e6bdd4a60e6116a5414239cba5943d3cf # v3.2.0

      - name: Set up Docker Buildx
        if: inputs.build-changes-only == false || env.has_changes == 'true'
        uses: docker/setup-buildx-action@c47758b77c9736f4b2ef4073d4d51994fabfe349 # v3.7.1
        with:
          platforms: ${{ inputs.multiarch == true && 'linux/amd64,linux/arm64' || 'linux/amd64' }}

      - name: Build and push images
        if: inputs.build-changes-only == false || env.has_changes == 'true'
        uses: docker/build-push-action@4f58ea79222b3b9dc2c8bbdd6debcef730109a75 # v6.9.0
        with:
          context: ${{ inputs.context }}
          file: ${{ inputs.context }}/${{ inputs.dockerfile }}
          push: true
          platforms: ${{ inputs.multiarch == true && 'linux/amd64,linux/arm64' || 'linux/amd64' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
    outputs:
      has-changes: ${{ env.has_changes }}
